name: Spider Build Deploy

# 触发条件
on:
  # 每天凌晨 0 点执行，仅在 dev 分支触发
  schedule:
    - cron: "0 0 * * *"
  # 手动触发，仅在 dev 分支触发
  workflow_dispatch:
  # 当 push 到 dev 分支时触发
  push:
    branches:
      - dev
      - main

permissions:
  id-token: write
  pages: write
  contents: write # 允许 GitHub Actions 修改代码（如 push）

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5 # 任务最大执行时间 5 分钟

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # 安装依赖
      - name: Install dependencies
        working-directory: spider
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 执行脚本
      - name: Run spider script
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: |
            cd spider
            python run_spider.py

      # 提交更改
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "[skip actions] Update data generated by spider"
            git push
          else
            echo "No changes to commit."
          fi

      # 拷贝资源
      - name: Copy resources
        run: |
          cp -r spider/data web/public
          cp -r spider/img web/public

      # 设置node环境
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # 安装依赖、构建网站
      - name: Build website
        working-directory: web
        run: |
          npm install
          npm run build

      - name: Generate 404 Page # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        working-directory: web
        run: |
          cp dist/index.html dist/404.html

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: web/dist
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
